Terraform commands:

- terraform import ???
- terraform state ???

Get changes:
- terraform init

Validate terraform configuration:
- terraform validate

Format files stucture:
- terraform fmt

Generate a plan:
- terraform plan

Apply changes:
- terraform apply

Apply specific module changes:
- terraform apply -target=module.<module-name>

Apply specific resource changes:
- terraform apply -target=<resource>.<resource-name>

Destroy changes:
- terraform destroy

#-------------------------------------------------

Useful order for Docker, ECR, Lambda, API Gateway:

1. Build Docker image
- docker build -t <docker-image-name> .

2. Create ECR repository
- aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin <ACCOUNT_ID>.dkr.ecr.eu-west-1.amazonaws.com
- aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 358362547251.dkr.ecr.eu-west-1.amazonaws.com
- terraform init
- terraform apply -target=module.ecr

3. Push Docker image to ECR repository
- docker tag my-lambda-app:latest <ACCOUNT_ID>.dkr.ecr.eu-west-1.amazonaws.com/my-lambda-app:latest
- docker push <ACCOUNT_ID>.dkr.ecr.eu-west-1.amazonaws.com/lambda-repo:latest
- docker push 358362547251.dkr.ecr.eu-west-1.amazonaws.com/ml-spam-lambda:latest

4. Create lambda poiting to ECR image
- terraform apply

------------
Lambda run locally on
http://localhost:9000/2015-03-31/functions/function/invocations